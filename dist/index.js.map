{"version":3,"sources":["../src/index.js"],"names":["module","exports","email","localChars","localLetters","slice","indexOf","split","length","areLocalCharsValid","every","letter","i","atSymbol","dot","lastIndexOf","space","domainChars","domainLetters","areDomainCharsValid"],"mappings":"aAGAA,OAAOC,OAAP,CAAiB,SAACC,CAAD,CAAW,IAIpBC,6OAJoB,CAKpBC,EAAeF,EAAMG,KAAN,CAAY,CAAZ,CAAeH,EAAMI,OAAN,CAAc,GAAd,CAAf,EAAmCC,KAAnC,CAAyC,EAAzC,CALK,CAM1B,GAA0B,EAAtB,GAAaC,MAAjB,CAA8B,SAO9B,GAAI,CANuB,QAArBC,EAAqB,SAAML,GAAaM,KAAb,CAAmB,SAACC,CAAD,CAASC,CAAT,CAAe,QAGlD,GAAX,MAAwB,CAAN,IAAlB,EAA6BA,IAAMR,EAAaI,MAAb,CAAsB,CAAzD,EAAuF,GAAxB,KAAaI,EAAI,CAAjB,GAAuD,GAAxB,KAAaA,EAAI,CAAjB,CAHjC,GAI3B,CAAC,CAAhC,KAAWN,OAAX,CAAmBK,CAAnB,CACR,CALgC,CAAN,CAMtB,EAAL,CAA2B,SAG3B,GAA4B,CAAC,CAAzB,KAAML,OAAN,CAAc,IAAd,CAAJ,CAAgC,SAGhC,GAAMO,GAAWX,EAAMI,OAAN,CAAc,GAAd,CAAjB,CACA,GAAe,CAAX,EAAJ,CAAkB,SAGlB,GAAMQ,GAAMZ,EAAMa,WAAN,CAAkB,GAAlB,CAAZ,CACA,GAAID,GAAOD,EAAW,CAAtB,CAAyB,SACzB,GAAIC,IAAQZ,EAAMM,MAAN,CAAe,CAA3B,CAA8B,SAG9B,GAAMQ,GAAQd,EAAMI,OAAN,CAAc,GAAd,CAAd,CACA,GAAc,CAAC,CAAX,OAAsC,GAArB,KAAMU,EAAQ,CAAd,GAAiD,GAArB,KAAMA,EAAQ,CAAd,CAA7C,CAAJ,CAA4E,SA7BlD,GAgCpBC,oHAhCoB,CAiCpBC,EAAgBhB,EAAMG,KAAN,CAAYH,EAAMI,OAAN,CAAc,GAAd,EAAqB,CAAjC,EAAoCC,KAApC,CAA0C,EAA1C,CAjCI,SAkCE,QAAtBY,EAAsB,SAAMD,GAAcR,KAAd,CAChC,kBAA0C,CAAC,CAAjC,KAAYJ,OAAZ,CAAoBK,CAApB,CAAV,CADgC,CAAN,CAGvB,EAGN,C","file":"index.js","sourcesContent":["// VALID EMAIL\n// Attempting to follow rules from https://en.wikipedia.org/wiki/Email_address.\n// Checks if the email is valid.\nmodule.exports = (email) => {\n  // Need to add support for special local chars that are properly quoted.\n  // Need to add support for quotes in ().\n  // Checking local section for appropriate characters.\n  const localChars = \"abcdefghijklmnopqrstuvwxyz0123456789.!#$%&'*+-/=?^_`{|}~ \\\"\".split('');\n  const localLetters = email.slice(0, email.indexOf('@')).split('');\n  if (localLetters.length > 64) return false;\n  const areLocalCharsValid = () => localLetters.every((letter, i) => {\n    // Check to make sure \" has a period before or after\n    // if they are not the first or last character in local.\n    if (letter === '\"' && i !== 0 && i !== localLetters.length - 1 && (localLetters[i - 1] !== '.' || localLetters[i + 1] !== '.')) return false;\n    return localChars.indexOf(letter) !== -1;\n  });\n  if (!areLocalCharsValid()) return false;\n\n  // Make sure there are not two periods together.\n  if (email.indexOf('..') !== -1) return false;\n\n  // Confirm that there is an at symbol and it isn't the first character.\n  const atSymbol = email.indexOf('@');\n  if (atSymbol < 1) return false;\n\n  // Confirm that there is a dot at least 1 character after the at and 2 characters before the end.\n  const dot = email.lastIndexOf('.');\n  if (dot <= atSymbol + 1) return false;\n  if (dot === email.length - 2) return false;\n\n  // Confirm that there is no spaces that are not surrounded by quotes.\n  const space = email.indexOf(' ');\n  if (space !== -1 && (email[space + 1] !== '\"' || email[space - 1] !== '\"')) return false;\n\n  // Confirm that the domain name is only alpha and periods\n  const domainChars = 'abcdefghijklmnopqrstuvwxyz.-'.split('');\n  const domainLetters = email.slice(email.indexOf('@') + 1).split('');\n  const areDomainCharsValid = () => domainLetters.every(\n    letter => domainChars.indexOf(letter) !== -1,\n  );\n  if (!areDomainCharsValid()) return false;\n\n  return true;\n};\n"]}
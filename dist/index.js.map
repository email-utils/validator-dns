{"version":3,"sources":["../src/index.js"],"names":["validEmail","email","localChars","split","localLetters","slice","indexOf","length","areLocalCharsValid","every","letter","i","atSymbol","dot","lastIndexOf","space","domainChars","domainLetters","areDomainCharsValid"],"mappings":";;;;;AAAA;AACA;AACA;AACA,IAAMA,aAAa,SAAbA,UAAa,CAACC,KAAD,EAAW;AAC5B;AACA;AACA;AACA,MAAMC,aAAa,8DAA8DC,KAA9D,CAAoE,EAApE,CAAnB;AACA,MAAMC,eAAeH,MAAMI,KAAN,CAAY,CAAZ,EAAeJ,MAAMK,OAAN,CAAc,GAAd,CAAf,EAAmCH,KAAnC,CAAyC,EAAzC,CAArB;AACA,MAAIC,aAAaG,MAAb,GAAsB,EAA1B,EAA8B,OAAO,KAAP;AAC9B,MAAMC,qBAAqB,SAArBA,kBAAqB;AAAA,WAAMJ,aAAaK,KAAb,CAAmB,UAACC,MAAD,EAASC,CAAT,EAAe;AACjE;AACA;AACA,UAAID,WAAW,GAAX,IAAkBC,MAAM,CAAxB,IAA6BA,MAAMP,aAAaG,MAAb,GAAsB,CAAzD,KAA+DH,aAAaO,IAAI,CAAjB,MAAwB,GAAxB,IAA+BP,aAAaO,IAAI,CAAjB,MAAwB,GAAtH,CAAJ,EAAgI,OAAO,KAAP;AAChI,aAAOT,WAAWI,OAAX,CAAmBI,MAAnB,MAA+B,CAAC,CAAvC;AACD,KALgC,CAAN;AAAA,GAA3B;AAMA,MAAI,CAACF,oBAAL,EAA2B,OAAO,KAAP;;AAE3B;AACA,MAAIP,MAAMK,OAAN,CAAc,IAAd,MAAwB,CAAC,CAA7B,EAAgC,OAAO,KAAP;;AAEhC;AACA,MAAMM,WAAWX,MAAMK,OAAN,CAAc,GAAd,CAAjB;AACA,MAAIM,WAAW,CAAf,EAAkB,OAAO,KAAP;;AAElB;AACA,MAAMC,MAAMZ,MAAMa,WAAN,CAAkB,GAAlB,CAAZ;AACA,MAAID,OAAOD,WAAW,CAAtB,EAAyB,OAAO,KAAP;AACzB,MAAIC,QAAQZ,MAAMM,MAAN,GAAe,CAA3B,EAA8B,OAAO,KAAP;;AAE9B;AACA,MAAMQ,QAAQd,MAAMK,OAAN,CAAc,GAAd,CAAd;AACA,MAAIS,UAAU,CAAC,CAAX,KAAiBd,MAAMc,QAAQ,CAAd,MAAqB,GAArB,IAA4Bd,MAAMc,QAAQ,CAAd,MAAqB,GAAlE,CAAJ,EAA4E,OAAO,KAAP;;AAE5E;AACA,MAAMC,cAAc,+BAA+Bb,KAA/B,CAAqC,EAArC,CAApB;AACA,MAAMc,gBAAgBhB,MAAMI,KAAN,CAAYJ,MAAMK,OAAN,CAAc,GAAd,IAAqB,CAAjC,EAAoCH,KAApC,CAA0C,EAA1C,CAAtB;AACA,MAAMe,sBAAsB,SAAtBA,mBAAsB;AAAA,WAAMD,cAAcR,KAAd,CAChC;AAAA,aAAUO,YAAYV,OAAZ,CAAoBI,MAApB,MAAgC,CAAC,CAA3C;AAAA,KADgC,CAAN;AAAA,GAA5B;AAGA,MAAI,CAACQ,qBAAL,EAA4B,OAAO,KAAP;;AAE5B,SAAO,IAAP;AACD,CAxCD;;kBA0CelB,U","file":"index.js","sourcesContent":["// VALID EMAIL\n// Attempting to follow rules from https://en.wikipedia.org/wiki/Email_address.\n// Checks if the email is valid.\nconst validEmail = (email) => {\n  // Need to add support for special local chars that are properly quoted.\n  // Need to add support for quotes in ().\n  // Checking local section for appropriate characters.\n  const localChars = \"abcdefghijklmnopqrstuvwxyz0123456789.!#$%&'*+-/=?^_`{|}~ \\\"\".split('');\n  const localLetters = email.slice(0, email.indexOf('@')).split('');\n  if (localLetters.length > 64) return false;\n  const areLocalCharsValid = () => localLetters.every((letter, i) => {\n    // Check to make sure \" has a period before or after\n    // if they are not the first or last character in local.\n    if (letter === '\"' && i !== 0 && i !== localLetters.length - 1 && (localLetters[i - 1] !== '.' || localLetters[i + 1] !== '.')) return false;\n    return localChars.indexOf(letter) !== -1;\n  });\n  if (!areLocalCharsValid()) return false;\n\n  // Make sure there are not two periods together.\n  if (email.indexOf('..') !== -1) return false;\n\n  // Confirm that there is an at symbol and it isn't the first character.\n  const atSymbol = email.indexOf('@');\n  if (atSymbol < 1) return false;\n\n  // Confirm that there is a dot at least 1 character after the at and 2 characters before the end.\n  const dot = email.lastIndexOf('.');\n  if (dot <= atSymbol + 1) return false;\n  if (dot === email.length - 2) return false;\n\n  // Confirm that there is no spaces that are not surrounded by quotes.\n  const space = email.indexOf(' ');\n  if (space !== -1 && (email[space + 1] !== '\"' || email[space - 1] !== '\"')) return false;\n\n  // Confirm that the domain name is only alpha and periods\n  const domainChars = 'abcdefghijklmnopqrstuvwxyz.-'.split('');\n  const domainLetters = email.slice(email.indexOf('@') + 1).split('');\n  const areDomainCharsValid = () => domainLetters.every(\n    letter => domainChars.indexOf(letter) !== -1,\n  );\n  if (!areDomainCharsValid()) return false;\n\n  return true;\n};\n\nexport default validEmail;\n"]}